openapi: 3.0.0
info:
  title: Review API
  description: API for managing reviews.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Development server

paths:
  /reviews:
    get:
      summary: Get all reviews
      tags:
        - Reviews
      description: Retrieve a list of all reviews.
      responses:
        200:
          description: A list of reviews.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        500:
          description: Internal server error

    post:
      summary: Create a new review
      tags:
        - Reviews
      description: Add a new review for a movie.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewInput'
      responses:
        200:
          description: Review created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        500:
          description: Internal server error

  /reviews/{rid}:
    get:
      summary: Get a review by ID
      tags:
        - Reviews
      description: Retrieve a specific review by its ID.
      parameters:
        - name: rid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the review.
      responses:
        200:
          description: Review details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        404:
          description: Review not found.
        500:
          description: Internal server error

    put:
      summary: Update a review by ID
      tags:
        - Reviews
      description: Update the details of an existing review.
      security:
        - bearerAuth: []
      parameters:
        - name: rid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the review.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateInput'
      responses:
        200:
          description: Review updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        404:
          description: Review not found.
        500:
          description: Internal server error

    delete:
      summary: Delete a review by ID
      tags:
        - Reviews
      description: Remove a review from the database.
      security:
        - bearerAuth: []
      parameters:
        - name: rid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the review.
      responses:
        200:
          description: Review deleted successfully.
        404:
          description: Review not found.
        500:
          description: Internal server error

  /reviews/movie/{mid}:
    get:
      summary: Get reviews by movie ID
      tags:
        - Reviews
      description: Retrieve all reviews for a specific movie.
      parameters:
        - name: mid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the movie.
      responses:
        200:
          description: A list of reviews for the specified movie.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        404:
          description: Reviews not found.
        500:
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Review:
      type: object
      properties:
        rid:
          type: string
          description: Unique identifier for the review.
        uid:
          type: string
          description: ID of the user who wrote the review.
        mid:
          type: string
          description: ID of the movie being reviewed.
        rating:
          type: integer
          description: Rating given to the movie.
        review_text:
          type: string
          description: Text content of the review.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the review was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the review was last updated.
      required:
        - rid
        - uid
        - mid
        - rating
        - review_text

    ReviewInput:
      type: object
      properties:
        uid:
          type: string
          description: ID of the user who wrote the review.
        mid:
          type: string
          description: ID of the movie being reviewed.
        rating:
          type: integer
          description: Rating given to the movie.
        review_text:
          type: string
          description: Text content of the review.
      required:
        - uid
        - mid
        - rating
        - review_text

    ReviewUpdateInput:
      type: object
      properties:
        rating:
          type: integer
          description: Updated rating for the movie.
        review_text:
          type: string
          description: Updated text content of the review.
      required:
        - rating
        - review_text